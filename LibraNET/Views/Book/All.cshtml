@model AllBooksViewModel
<div class="container">
	<form asp-controller="Book" asp-action="All" id="filterForm" method="get">
		<div class="rounded d-flex align-items-center border" id="header">
			<button class="btn text-uppercase text-center btn-success text-white h-100 w-25"
					type="button" data-bs-toggle="collapse" data-bs-target="#filterbar"
					aria-expanded="true" aria-controls="filterbar" id="filter-btn">
			</button>
			<div id="searchAndSort" class="d-flex mx-2 justify-content-between w-75">
				<div id="sort" class="my-2 w-50 text-center">
					<label class="text-muted">Sort by: </label>
					<select asp-for="BookSorting" class="" id="sortSelect" onchange="submitForm()">
						<option value="0">Title</option>
						<option value="1">Publication Date</option>
						<option value="2">Rating</option>
						<option value="3">Price</option>
					</select>
				</div>
				<div id="search" class="my-2 w-50">
					<div class="input-group">
						<input asp-for="SearchString" type="search" class="form-control rounded-left" placeholder="Search by title or ISBN" aria-label="Search" aria-describedby="search-addon" />
						<button type="submit" class="btn btn-outline-success rounded-left">
							<i class="bi bi-search"></i>
						</button>
					</div>
				</div>
			</div>
		</div>
		<div id="content" class="my-4">
			<div id="filterbar" class="show my-4">
				<div class="btn-group w-100">
					<button class="btn btn-success text-white text-uppercase" id="apply" type="submit">Apply</button>
					<button class="btn btn-warning text-white text-uppercase" id="reset" type="button" onclick="resetFilters()">Reset</button>
				</div>
				<div class="box border-bottom">
					<div class="box-label text-uppercase d-flex align-items-center">Authors</div>
					<div id="authors-box" class="mt-2 mr-1">
						@foreach (var author in @Model.Authors)
						{
							<div class="form-check align-content-center mx-1">
								<input class="form-check-input" name="SelectedAuthorsIds" value="@author.Id"
									   type="checkbox" checked="@author.IsSelected" id="@author.Id">
								<label class="form-check-label" for="@author.Id">@author.Name</label>
							</div>
						}
					</div>
				</div>
				<div class="box border-bottom">
					<div class="box-label text-uppercase d-flex align-items-center">Categories</div>
					<div id="categories-box" class="mt-2 mr-1">
						@foreach (var category in @Model.Categories)
						{
							<div class="form-check align-content-center mx-1">
								<input class="form-check-input" name="SelectedCategoriesIds" value="@category.Id"
									   type="checkbox" checked="@category.IsSelected" id="@category.Id">
								<label class="form-check-label" for="@category.Id">@category.Name</label>
							</div>
						}
					</div>
				</div>
				<div class="box">
					<div class="box-label text-uppercase d-flex align-items-center">Price</div>
					<div id="price">
						<div class="middle">
							<div class="multi-range-slider">
								<input asp-for="SelectedMinPrice" type="range" id="input-left"
									   min="@Model.MinPrice" max="@Model.MaxPrice">
								<input asp-for="SelectedMaxPrice" type="range" id="input-right"
									   min="@Model.MinPrice" max="@Model.MaxPrice">
								<div class="slider">
									<div class="track"></div>
									<div class="range"></div>
									<div class="thumb left"></div>
									<div class="thumb right"></div>
								</div>
							</div>
						</div>
						<div class="d-flex align-items-center justify-content-between mt-2">
							<div> <span id="amount-left" class="font-weight-bold"></span>$</div>
							<div> <span id="amount-right" class="font-weight-bold"></span>$</div>
						</div>
					</div>
				</div>
			</div>
			<div id="products">
				<div class="row justify-content-center">
					@if (!Model.Books.Any())
					{
						<h2 class="text-center py-5 text-muted">No books found by the given criteria!</h2>
					}
					@foreach (var book in Model.Books)
					{
						<partial name="_BookPartial" model="@book"></partial>
					}
				</div>
			</div>
		</div>
	</form>
	@{
		int previousPage = Model.CurrentPage - 1;
		if (previousPage == 0)
		{
			previousPage = 1;
		}
		int maxPage = (int)Math.Ceiling((double)Model.AllBooksCount / EntitiesPerPage);
	}
	@if (Model.Books.Any())
	{
		<nav class="text-center">
			<ul class="pagination d-inline-flex">
				<li class="page-item">
					<a class="page-link font-weight-bold">&lt;</a>
				</li>
				<li class="page-item">
					<a class="page-link">1</a>
				</li>
				<li class="page-item">
					<a class="page-link font-weight-bold">&gt;</a>
				</li>
			</ul>
		</nav>
	}
</div>
