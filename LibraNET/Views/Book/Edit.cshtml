@model BookFormModel
@{
	ViewData["Title"] = "Edit Book";
}
<h2 class="text-center">@ViewData["Title"]</h2>
<hr />

<div class="row">
	<div class="col-sm-12 offset-lg-2 col-lg-8 offset-xl-3 col-xl-6">
		<form asp-controller="Book" asp-action="Edit" method="post" enctype="multipart/form-data">
			<div class="mb-3">
				<label asp-for="@Model.Title" class="form-label"></label>
				<input asp-for="@Model.Title" class="form-control" aria-required="true" />
				<span asp-validation-for="@Model.Title" class="text-danger"></span>
			</div>
			<div class="mb-3">
				<label asp-for="@Model.ISBN" class="form-label"></label>
				<input asp-for="@Model.ISBN" class="form-control" aria-required="false" />
				<span asp-validation-for="@Model.ISBN" class="text-danger"></span>
			</div>
			<div class="mb-3">
				<label asp-for="@Model.PublicationDate" class="form-label"></label>
				<input type="date" asp-for="@Model.PublicationDate" class="form-control" aria-required="true" />
				<span asp-validation-for="@Model.PublicationDate" class="text-danger"></span>
			</div>
			<div class="mb-3">
				<label asp-for="@Model.Description" class="form-label"></label>
				<textarea asp-for="@Model.Description" class="form-control" aria-required="true" rows="5"></textarea>
				<span asp-validation-for="Description" class="text-danger"></span>
			</div>
			<div class="mb-3">
				<label asp-for="PageCount" class="form-label"></label>
				<input asp-for="PageCount" class="form-control" />
				<span asp-validation-for="PageCount" class="text-danger"></span>
			</div>
			<div class="mb-3">
				<label asp-for="Language" class="form-label"></label>
				<input asp-for="Language" class="form-control" />
				<span asp-validation-for="Language" class="text-danger"></span>
			</div>
			<div class="mb-3">
				<label asp-for="Image" class="form-label"></label>
				<input type="file" asp-for="Image" class="form-control" />
				<span asp-validation-for="Image" class="text-danger"></span>
			</div>
			<div class="mb-3">
				<label asp-for="Price" class="form-label"></label>
				<input asp-for="Price" class="form-control" />
				<span asp-validation-for="Price" class="text-danger"></span>
			</div>
			<div class="mb-3">
				<label asp-for="AvailableCount" class="form-label"></label>
				<input asp-for="AvailableCount" class="form-control" />
				<span asp-validation-for="AvailableCount" class="text-danger"></span>
			</div>
			<div class="mb-3">
				<label asp-for="PublisherName" class="form-label"></label>
				<input asp-for="PublisherName" class="form-control" />
				<span asp-validation-for="PublisherName" class="text-danger"></span>
			</div>
			<div class="mb-3">
				<label asp-for="@Model.SelectedCategoriesIds" class="form-label"></label>
				<select asp-for="@Model.SelectedCategoriesIds" class="form-select" id="multiple-select-field-categories" data-placeholder="Choose categories" multiple>
					=
					@foreach (var category in @Model.Categories)
					{
						<option value="@category.Id">@category.Name</option>
					}
				</select>
				<span asp-validation-for="@Model.SelectedCategoriesIds" class="text-danger"></span>
			</div>
			<div class="mb-3">
				<label asp-for="@Model.SelectedAuthorsIds" class="form-label"></label>
				<select asp-for="@Model.SelectedAuthorsIds" class="form-select" id="multiple-select-field-authors" data-placeholder="Choose authors" multiple>
					@foreach (var author in @Model.Authors)
					{
						<option value="@author.Id">@author.Name</option>
					}
				</select>
				<span asp-validation-for="@Model.SelectedAuthorsIds" class="text-danger"></span>
			</div>
			<div class="mb-3">
				<input class="btn btn-success mb-2 w-100 p-3 fw-bold" type="submit" value="Edit" />
			</div>
		</form>
	</div>
</div>


@section Scripts {
	<partial name="_ValidationScriptsPartial" />
	<script src="~/js/Book/Add.js"></script>
	<script type="module">
		const fileInput = document.querySelector('input[type="file"]');

		const urlParts = window.location.href.split('/');
		let bookId = urlParts[urlParts.length - 1];

		$.get("https://localhost:7219/book/image/" + bookId, async function (data, status) {

			let imageName = data;
			if (imageName) {
				let urlr = "https://localhost:7219/Images/Books/" + imageName;

				const response = await fetch(urlr);
				const blob = await response.blob();

				const file = new File([blob], imageName, { type: blob.type });

				const dataTransfer = new DataTransfer();
				dataTransfer.items.add(file);
				fileInput.files = dataTransfer.files;
			}
		});
	</script>
}